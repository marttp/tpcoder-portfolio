---
import HeaderLink from './HeaderLink.astro';
import ThemeToggle from './ThemeToggle';
import 'animate.css';

const links = [
  { href: '/about', label: 'About' },
  { href: '/experience', label: 'Experiences' },
  { href: '/blog', label: 'Blogs' },
  { href: '/project', label: 'Projects' },
  { href: '/skill', label: 'Skills' },
  { href: '/activity', label: 'Activities & Volunteers' },
  { href: '/contact', label: 'Contact' },
];
---

<header class="w-full">
  <div class="py-4 px-6 flex justify-between items-center">
    <div class="flex items-center">
      <HeaderLink href="/" class="text-lg font-bold">
        <img src="/favicon.svg" alt="logo" class="h-8 w-8 mr-2" />
      </HeaderLink>
    </div>
    <nav
      class="hidden md:flex md:items-center md:space-x-4 flex-col items-center"
    >
      <div class="hidden md:flex items-center space-x-4">
        {
          links.map((link) => (
            <HeaderLink href={link.href}>{link.label}</HeaderLink>
          ))
        }
      </div>
    </nav>
    <div class="flex items-center space-x-4">
      <ThemeToggle client:only />
      <button
        class="block md:hidden"
        onclick="toggleNav()"
        aria-label="Expand menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
        </svg>
      </button>
    </div>
  </div>
  <div
    class="md:hidden flex flex-col items-center w-full hidden"
    id="mobile-menu"
  >
    {
      links.map((link) => (
        <HeaderLink class="my-1" href={link.href}>
          {link.label}
        </HeaderLink>
      ))
    }
  </div>

  <script lang="ts">
    function toggleNav() {
      const nav = document.getElementById('mobile-menu');
      if (nav.classList.contains('hidden')) {
        nav.classList.remove('hidden');
        nav.classList.add('animate__animated', 'animate__fadeInDown');
      } else {
        nav.classList.remove('animate__fadeInDown');
        nav.classList.add('animate__fadeOutUp');
        setTimeout(() => {
          nav.classList.add('hidden');
          nav.classList.remove('animate__animated', 'animate__fadeOutUp');
        }, 500);
      }
    }
  </script>
</header>
